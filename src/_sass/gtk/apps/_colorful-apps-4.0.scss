// /***** color-palette *****/
$theme_red:         #D93025;
$theme_light_red:   #FF1744;
$theme_pink:        #E91E63;
$theme_purple:      #9C27B0;
$theme_deep_purple: #673AB7;
$theme_indigo:      #3949AB;
$theme_blue:        #0091EA;
$theme_light_blue:  #0288D1;
$theme_cyan:        #5E35B1;
$theme_dark_cyan:   #4769d2;
$theme_teal:        #188c75;
$theme_green:       #4CAF50;
$theme_sea_green:   #6ab878;
$theme_lime:        #C0CA33;
$theme_yellow:      #FFD600;
$theme_dark_yellow: #F57F17;
$theme_amber:       #FFA000;
$theme_orange:      #FF6D00;
$theme_deep_orange: #F4511E;
$theme_brown:       #6D4C41;
$theme_grey:        #424242;
$theme_dark_grey:   #323232;
$theme_blue_grey:   #37474F;
$theme_green_grey:  #3b4342;
// /***** color-palette *****/

// Some color theme stuff
@mixin color_theme($headerbar_rules: 'true',
                   $check_rules: 'true',
                   $switch_rules: 'true',
                   $view_rules: 'true',
                   $entry_rules: 'true',
                   $button_rules: 'true',
                   $scale_rules: 'true',
                   $progress_rules: 'true',
                   $link_rules: 'true',
                   $theme_color: $primary,
                   $header_color: if($topbar == 'light', mix($theme_color, $background, 5%), $theme_color),
                   $theme_indicator: if($topbar == 'dark', currentColor, $theme_color)) {
  @if $headerbar_rules=='true' {
    @if $topbar == 'dark' {
      &:not(.message):not(.about) {
        background-image: linear-gradient(to bottom,
                                          $header_color,
                                          $header_color $large-size,
                                          $background $large-size,
                                          $background);

        &:backdrop {
          background-image: linear-gradient(to bottom,
                                            darken($header_color, 2%),
                                            darken($header_color, 2%) $large-size,
                                            $background $large-size,
                                            $background);
        }
      }
    }

    headerbar:not(.flat) {
      background-color: $header_color;

      &:backdrop {
        background-color: darken($header_color, 2%);
      }
    }
  }

  @if $check_rules=='true' {
    check, radio {
      &:checked, &:indeterminate {
        color: $theme_color;
      }
    }
  }

  @if $switch_rules=='true' {
    switch {
      &:checked { background-color: rgba($theme_color, 0.5); }

      &:checked slider {
        background-color: $theme_color;
        color: $theme_color;
      }
    }
  }

  @if $view_rules=='true' {
    .view {
      &:selected { color: $theme_color; }
    }

    treeview.view {
      &.expander {
        &:selected { color: $theme_color; }
      }

      &.progressbar {
        border-color: $theme_color;
      }
    }
  }

  @if $entry_rules=='true' {
    entry, spinbutton:not(.vertical) {
      caret-color: $theme_color;

      &:focus-within { @include entry(checked, $fc: $theme_color); }

      selection {
        color: on($theme_color);
        background-color: $theme_color;
      }
    }

    entry progress {
      border-color: $theme_color;
    }

    label {
      selection {
        color: on($theme_color);
        background-color: $theme_color;
      }
    }

    headerbar {
      entry, spinbutton:not(.vertical) {
        &:focus-within { @include entry(checked, $fc: $theme_indicator); }

        selection {
          color: if($topbar == 'dark', $theme_color, on($theme_color));
          background-color: if($topbar == 'dark', white, $theme_color);
        }
      }

      entry progress {
        border-color: $theme_indicator;
      }

      label {
        selection {
          color: if($topbar == 'dark', $theme_color, on($theme_color));
          background-color: if($topbar == 'dark', white, $theme_color);
        }
      }
    }
  }

  @if $button_rules=='true' {
    button:not(.suggested-action):not(.destructive-action):not(.combo):not(.down):not(.up) {
      &:checked:not(:disabled) {
        color: on($theme_color);
        background-color: $theme_color;

        &:hover {
          box-shadow: 0 3px 3px -3px rgba($theme_color, 0.3),
                      0 2px 3px -1px rgba($theme_color, 0.24),
                      0 2px 5px 0 rgba($theme_color, 0.12);
        }
      }

      &:focus {
        outline-color: rgba($theme_color, 0.28);
      }

      &.flat {
        &:checked:not(:disabled) {
          @include button(flat-checked);
        }
      }
    }

    button.combo {
      &:checked:not(:disabled) {
        @include entry(checked, $fc: $theme_color);
        background-color: $fill;
        color: $text;

        &:hover {
          box-shadow: none;
        }
      }
    }

    stackswitcher > button:not(.suggested-action):not(.destructive-action):not(.combo):not(.down):not(.up) { // reset stackswitcher buttons
      border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                    $theme_color 0%,
                                    transparent 0%)
                                    0 0 0 / 0 0 0px;

      &:active {
        border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                      $theme_color 100%,
                                      transparent 0%)
                                      0 0 2 / 0 0 2px;
        color: $text;
      }

      &:checked:not(:disabled), &:checked:hover {
        box-shadow: inset 0 -2px $theme_color;
        color: $text;
        background-color: transparent;

        &:hover {
          box-shadow: none;
        }
      }
    }

    headerbar {
      splitbutton.image-button {
        &:hover {
          background-color: if($topbar == 'dark', rgba(black, 0.12), rgba(black, 0.08));
        }
      }

      button:not(.suggested-action):not(.destructive-action):not(.combo):not(.down):not(.up),
      button:not(.suggested-action):not(.destructive-action):not(.combo):not(.down):not(.up).flat { // reset headerbar buttons
        background-color: transparent;
        color: $titlebar-text;

        &:hover {
          background-color: if($topbar == 'dark', rgba(black, 0.12), rgba(black, 0.08));
          box-shadow: none;
        }

        &:focus {
          outline-color: $overlay-selected;
          color: $titlebar-text;
        }

        &:active {
          background-color: if($topbar == 'dark', rgba(black, 0.12), rgba(black, 0.08));
          background-image: radial-gradient(circle, if($topbar == 'dark', rgba(black, 0.12), rgba(black, 0.08)) 10%, transparent 0%);
        }

        &:checked:not(:disabled) {
          background-color: if($topbar == 'dark', rgba(black, 0.16), rgba(black, 0.1));
          color: $titlebar-text;

          &:hover {
            background-color: if($topbar == 'dark', rgba(black, 0.22), rgba(black, 0.15));
            box-shadow: none;
          }
        }
      }
    }

    indicatorbin {
      > indicator {
        background: $titlebar-indicator;
      }
    }
  }

  @if $scale_rules=='true' {
    scale {
      highlight {
        background-image: image($theme_color);
      }

      slider { color: $theme_color; }
    }
  }

  @if $progress_rules=='true' {
    progressbar > trough > progress { background-color: $theme_color; }
  }

  @if $link_rules=='true' {
    link {
      color: $theme_color;

      &:visited {
        color: $text-secondary-disabled;
      }
    }

    button.link {
      &:link {
        &, &:focus, &:hover, &:active { color: $theme_color; }
      }

      &:visited {
        &, &:focus, &:hover, &:active { color: $text-secondary-disabled; }
      }
    }
  }
}

//
// Nautilus
//

$nautilus-header:          if($topbar == 'dark', #3266D4, mix(#3266D4, $background, 5%));
$nautilus-header-backdrop: if($topbar == 'dark', darken(#3266D4, 2%), mix(darken(#3266D4, 2%), $background, 5%));

window.background.nautilus-window {
  @if $topbar == 'dark' {
    &:not(.message):not(.about) {
      background-image: linear-gradient(to bottom,
                                        $nautilus-header,
                                        $nautilus-header $large-size,
                                        $background $large-size,
                                        $background);

      &:backdrop {
        background-image: linear-gradient(to bottom,
                                          $nautilus-header-backdrop,
                                          $nautilus-header-backdrop $large-size,
                                          $background $large-size,
                                          $background);
      }
    }
  }

  headerbar {
    background-color: $nautilus-header;

    &:backdrop {
      background-color: $nautilus-header-backdrop;
    }

    splitbutton.image-button {
      &:hover {
        background-color: if($topbar == 'dark', rgba(black, 0.12), rgba(black, 0.08));
      }
    }

    button:not(.suggested-action):not(.destructive-action) { // reset headerbar buttons
      background-color: transparent;
      color: $titlebar-text;

      &:hover {
        background-color: if($topbar == 'dark', rgba(black, 0.12), rgba(black, 0.08));
        box-shadow: none;
      }

      &:focus {
        outline-color: $overlay-selected;
        color: $titlebar-text;
      }

      &:active {
        background-color: if($topbar == 'dark', rgba(black, 0.12), rgba(black, 0.08));
        background-image: radial-gradient(circle, if($topbar == 'dark', rgba(black, 0.12), rgba(black, 0.08)) 10%, transparent 0%);
      }

      &:checked:not(:disabled) {
        background-color: if($topbar == 'dark', rgba(black, 0.16), rgba(black, 0.1));
        color: $titlebar-text;

        &:hover {
          background-color: if($topbar == 'dark', rgba(black, 0.22), rgba(black, 0.15));
          box-shadow: none;
        }
      }
    }
  }

  indicatorbin {
    > indicator {
      background: $titlebar-indicator;
    }
  }
}

//
// Text Editor
//

window.background.org-gnome-TextEditor {
  @include color_theme($theme_color: $theme_amber);

  tabbar tab {
    border-image: radial-gradient( circle closest-corner at center calc(100% - 1px), $theme_amber 0%, transparent 0%) 2 / 0 0 0px;

    &:selected, &:checked {
      border-image: radial-gradient( circle closest-corner at center calc(100% - 1px), $theme_amber 100%, transparent 0%) 2 / 0 0 2px;
    }
  }
}

//
// Gnome Contacts / Gnome Calender
//

window.background.csd:not(.about) {
  > contents > toastoverlay > leaflet {
    @include color_theme($theme_color: $theme_orange);

    .navigation-sidebar > row {
      &:selected { &, label, image { color: $theme_orange; }}
    }

    label.primary-label, label.accent, label.month-name {
      color: $theme_orange;
    }

    monthcell {
      &:selected {
        background-color: rgba($theme_orange, 0.1);
      }

      &.today {
        background-color: rgba($theme_orange, 0.25);
      }
    }

    .now-strip {
      background-color: rgba($theme_orange, 0.65);
    }

    button.day:selected {
      background-color: $theme_orange;
      color: on($theme_orange);
    }
  }
}

//
// Gnome Control Center
//

window.background.csd {
  > contents > leaflet {
    @include color_theme($theme_color: $theme_cyan);

    .navigation-sidebar > row {
      &:selected { &, label, image { color: $theme_cyan; }}
    }
  }
}

//
// Gnome Software
//

window.background.csd {
  > contents > stack > overlay {
    > leaflet {
      @include color_theme($theme_color: $theme_green);
    }

    progressbar > trough > progress { background-color: $theme_green; }
  }
}

//
// Gnome Calculator
//

window.background.csd:not(.org-gnome-TextEditor):not(.org-gnome-Builder) {
  > contents > box {
    @include color_theme($theme_color: $theme_deep_orange);

    .math-buttons button.suggested-action.text-button {
      background-color: $theme_deep_orange;
      color: on($theme_deep_orange);

      &:hover {
        box-shadow: 0 3px 3px -3px rgba($theme_deep_orange, 0.3),
                    0 2px 3px -1px rgba($theme_deep_orange, 0.24),
                    0 2px 5px 0 rgba($theme_deep_orange, 0.12);
      }
    }
  }
}

//
// Dialogs
//

window.background.dialog {
  @include color_theme($theme_color: $theme_pink);

  headerbar.titlebar {
    button.suggested-action { background-color: $purple-500; }
  }

  .navigation-sidebar > row {
    &:selected { &, label, image { color: $theme_pink; }}
  }

  scale {
    slider {
      color: $theme_pink;

      @each $s, $as in ('', '') {
        &#{$s} {
          $_url: 'assets/scale-slider#{$as}#{$asset-suffix}-pink';

          background-image: -gtk-scaled(url('#{$_url}.png'), url('#{$_url}@2.png')),
                            radial-gradient(circle, transparent 10%, transparent 0%);
        }
      }

      &:active {
        $_url: 'assets/scale-slider#{$asset-suffix}-pink';
        background-image: -gtk-scaled(url('#{$_url}.png'), url('#{$_url}@2.png')),
                          radial-gradient(circle, $overlay-active 10%, transparent 0%);
        background-size: auto, 0% 0%;
      }
    }

    @each $dir_class, $dir_infix in ('horizontal', 'horz'),
                                    ('vertical', 'vert') {
      @each $marks_infix, $marks_class in ('marks-before', 'marks-before:not(.marks-after)'),
                                          ('marks-after', 'marks-after:not(.marks-before)') {
        &.#{$dir_class}.#{$marks_class} {
          slider {
            @each $state, $state_infix in ('', ''),
                                          (':disabled', '-disabled') {
              &#{$state} {
                $_scale_asset: 'assets/scale-#{$dir_infix}-#{$marks_infix}-slider#{$state_infix}-pink';

                background-image: -gtk-scaled(url('#{$_scale_asset}.png'), url('#{$_scale_asset}@2.png')),
                                  radial-gradient(circle, transparent 10%, transparent 0%);
              }
            }

            &:active {
              $_scale_asset: 'assets/scale-#{$dir_infix}-#{$marks_infix}-slider-pink';

              background-image: -gtk-scaled(url('#{$_scale_asset}.png'), url('#{$_scale_asset}@2.png')),
                                radial-gradient(circle, $overlay-active 10%, transparent 0%);
            }
          }
        }
      }
    }
  }

  pathbar > button:not(.suggested-action):not(.destructive-action):not(.combo):not(.down):not(.up) {
    border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                  $theme_pink 0%,
                                  transparent 0%)
                                  0 0 0 / 0 0 0px;

    &:checked:not(:disabled) {
      background-color: $fill;
      border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                    $theme_pink 100%,
                                    transparent 0%)
                                    0 0 2 / 0 0 2px;
    }
  }
}
